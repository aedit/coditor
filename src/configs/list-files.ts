import { FilesResponse } from '../contexts/Files/Files.types';
import structureFiles from '../utilities/structureFiles';

const mockFilesData = {
  status: 'SUCCESS',
  message: 'List of all files and directories fetched successfully',
  data: {
    files: [
      {
        relativePath: 'DBT_TEST',
        name: 'DBT_TEST',
        pathType: 'directory',
        depth: 0,
        index: 0,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/analyses',
        name: 'analyses',
        pathType: 'directory',
        depth: 1,
        index: 1,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/logs',
        name: 'logs',
        pathType: 'directory',
        depth: 1,
        index: 37,
        gitStatus: null,
        gitIgnored: true,
      },
      {
        relativePath: 'DBT_TEST/macros',
        name: 'macros',
        pathType: 'directory',
        depth: 1,
        index: 39,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models',
        name: 'models',
        pathType: 'directory',
        depth: 1,
        index: 4,
        gitStatus: 'modified',
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/snapshots',
        name: 'snapshots',
        pathType: 'directory',
        depth: 1,
        index: 43,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target',
        name: 'target',
        pathType: 'directory',
        depth: 1,
        index: 47,
        gitStatus: null,
        gitIgnored: true,
      },
      {
        relativePath: 'DBT_TEST/tests',
        name: 'tests',
        pathType: 'directory',
        depth: 1,
        index: 45,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/.gitignore',
        name: '.gitignore',
        pathType: 'file',
        depth: 1,
        index: 36,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/dbt_project.yml',
        name: 'dbt_project.yml',
        pathType: 'file',
        depth: 1,
        index: 3,
        gitStatus: 'untracked',
        gitIgnored: false,
        content:
          '\r\n# Name your project! Project names should contain only lowercase characters\r\n# and underscores. A good package name should reflect your organization\'s\r\n# name or the intended use of these models\r\nname: \'lineage_test\'\r\nversion: \'1.0.0\'\r\nconfig-version: 2\r\n\r\n# This setting configures which "profile" dbt uses for this project.\r\nprofile: \'snowflake\'\r\n\r\n# These configurations specify where dbt should look for different types of files.\r\n# The `source-paths` config, for example, states that models in this project can be\r\n# found in the "models/" directory. You probably won\'t need to change these!\r\nmodel-paths: ["models"]\r\n#analysis-paths: ["analyses"]\r\n#test-paths: ["tests"]\r\n#seed-paths: ["seeds"]\r\nmacro-paths: ["macros"]\r\n#snapshot-paths: ["snapshots"]\r\n\r\ntarget-path: "target"  # directory which will store compiled SQL files\r\nclean-targets:         # directories to be removed by `dbt clean`\r\n  - "target"\r\n  - "dbt_packages"\r\n\r\n\r\n# Configuring models\r\n# Full documentation: https://docs.getdbt.com/docs/configuring-models\r\n\r\n# In this example config, we tell dbt to build all models in the example/ directory\r\n# as tables. These settings can be overridden in the individual model files\r\n# using the `{{ config(...) }}` macro.\r\n--"SNOWFLAKE_SAMPLE_DATA"."TPCDS_SF100TCL"."CALL_CENTER"\r\n--SELECT "CP_CATALOG_PAGE_SK", "CP_CATALOG_PAGE_ID", "CP_START_DATE_SK", "CP_END_DATE_SK", "CP_DEPARTMENT", "CP_CATALOG_NUMBER", "CP_CATALOG_PAGE_NUMBER", "CP_DESCRIPTION", "CP_TYPE" FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CATALOG_PAGE',
      },
      {
        relativePath: 'DBT_TEST/README.md',
        name: 'README.md',
        pathType: 'file',
        depth: 1,
        index: 42,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/intermediate',
        name: 'intermediate',
        pathType: 'directory',
        depth: 2,
        index: 28,
        gitStatus: 'modified',
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart',
        name: 'mart',
        pathType: 'directory',
        depth: 2,
        index: 5,
        gitStatus: 'untracked',
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging',
        name: 'staging',
        pathType: 'directory',
        depth: 2,
        index: 20,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/compiled',
        name: 'compiled',
        pathType: 'directory',
        depth: 2,
        index: 50,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/analyses/.gitkeep',
        name: '.gitkeep',
        pathType: 'file',
        depth: 2,
        index: 2,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/logs/dbt.log',
        name: 'dbt.log',
        pathType: 'file',
        depth: 2,
        index: 38,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/macros/date_params.sql',
        name: 'date_params.sql',
        pathType: 'file',
        depth: 2,
        index: 41,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/macros/schema.sql',
        name: 'schema.sql',
        pathType: 'file',
        depth: 2,
        index: 40,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/.DS_Store',
        name: '.DS_Store',
        pathType: 'file',
        depth: 2,
        index: 19,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/sources.yml',
        name: 'sources.yml',
        pathType: 'file',
        depth: 2,
        index: 18,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/python_scripts/finance_mis.py',
        name: 'finance_mis.py',
        pathType: 'file',
        depth: 2,
        index: 60,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/python_scripts/requirements.txt',
        name: 'requirements.txt',
        pathType: 'file',
        depth: 2,
        index: 59,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/python_scripts/snowpark_sample.py',
        name: 'snowpark_sample.py',
        pathType: 'file',
        depth: 2,
        index: 62,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/python_scripts/tpo_dashboard.py',
        name: 'tpo_dashboard.py',
        pathType: 'file',
        depth: 2,
        index: 61,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/snapshots/.gitkeep',
        name: '.gitkeep',
        pathType: 'file',
        depth: 2,
        index: 44,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/graph.gpickle',
        name: 'graph.gpickle',
        pathType: 'file',
        depth: 2,
        index: 57,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/graph_summary.json',
        name: 'graph_summary.json',
        pathType: 'file',
        depth: 2,
        index: 56,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/manifest.json',
        name: 'manifest.json',
        pathType: 'file',
        depth: 2,
        index: 58,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/partial_parse.msgpack',
        name: 'partial_parse.msgpack',
        pathType: 'file',
        depth: 2,
        index: 55,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/run_results.json',
        name: 'run_results.json',
        pathType: 'file',
        depth: 2,
        index: 49,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/semantic_manifest.json',
        name: 'semantic_manifest.json',
        pathType: 'file',
        depth: 2,
        index: 48,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/tests/.gitkeep',
        name: '.gitkeep',
        pathType: 'file',
        depth: 2,
        index: 46,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/target/compiled/lineage_test',
        name: 'lineage_test',
        pathType: 'directory',
        depth: 3,
        index: 51,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/intermediate/int_reason.sql',
        name: 'int_reason.sql',
        pathType: 'file',
        depth: 3,
        index: 29,
        gitStatus: 'modified',
        gitIgnored: false,
        content:
          "{{\r\n\tconfig(\r\n\t\tschema = 'intermediate',\r\n    materialized = 'table',\r\n    tags = ['finance_mis']\r\n\t)\r\n}}\r\n\r\nwith necessary_orders as (\r\n    select *\r\n    from {{source('tpcds_ton','reason')}} o\r\n    left join {{ref('stg_tpcds_ton_inventory')}} d \r\n    left join {{ref('stg_tpch_one_customer')}} ba \r\n    left join {{ref('int_store_sale_promotion')}} pp \r\n    left join {{ref('stg_tpcds_ton_catalog_returns')}} dtr \r\n  \r\n)\r\n\r\n, order_fares_table as (\r\n    select * from {{source('tpcds_ton','store')}}\r\n)\r\n\r\n, discount_cte as (\r\n  select *\r\n  from {{ref('stg_tpcds_ton_customer')}} dt \r\n  join {{ref('stg_tpcds_ton_catalog_sales')}} dc \r\n  join {{source('tpcds_ton','reason')}} o \r\n  left join order_fares_table orf \r\n  left join necessary_orders n\r\n)\r\n\r\n, dum as (\r\n  select *\r\n  from necessary_orders as a\r\n  left join order_fares_table as b \r\n  left join {{ref('stg_tpcds_ton_warehouse')}}\r\n  left join {{ref('int_tpch_ten_part')}} \r\n  left join {{ref('int_tpcds_ton_warehouse')}} \r\n  left join discount_cte \r\n  group by all\r\n)\r\n\r\nselect * from dum",
      },
      {
        relativePath:
          'DBT_TEST/models/intermediate/int_store_sale_promotion.sql',
        name: 'int_store_sale_promotion.sql',
        pathType: 'file',
        depth: 3,
        index: 35,
        gitStatus: 'modified',
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/intermediate/int_tpcds_ton_item.sql',
        name: 'int_tpcds_ton_item.sql',
        pathType: 'file',
        depth: 3,
        index: 31,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath:
          'DBT_TEST/models/intermediate/int_tpcds_ton_warehouse.sql',
        name: 'int_tpcds_ton_warehouse.sql',
        pathType: 'file',
        depth: 3,
        index: 30,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/intermediate/int_tpch_ten_part.sql',
        name: 'int_tpch_ten_part.sql',
        pathType: 'file',
        depth: 3,
        index: 33,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/intermediate/int_warehouse.sql',
        name: 'int_warehouse.sql',
        pathType: 'file',
        depth: 3,
        index: 34,
        gitStatus: null,
        gitIgnored: false,
        content:
          "{{\r\n\tconfig(\r\n\t\tschema = 'intermediate',\r\n    materialized = 'table',\r\n    tags = ['finance_mis']\r\n\t)\r\n}}\r\n\r\nwith necessary_orders as (\r\n    select *\r\n    from {{source('tpcds_ton','reason')}} o\r\n    left join {{ref('stg_tpcds_ton_inventory')}} d \r\n    left join {{ref('stg_tpch_one_customer')}} ba \r\n    left join {{ref('int_store_sale_promotion')}} pp \r\n    left join {{ref('stg_tpcds_ton_catalog_returns')}} dtr \r\n  \r\n)\r\n\r\n, order_fares_table as (\r\n    select * from {{source('tpcds_ton','store')}}\r\n)\r\n\r\n, discount_cte as (\r\n  select *\r\n  from {{ref('stg_tpcds_ton_customer')}} dt \r\n  join {{ref('stg_tpcds_ton_catalog_sales')}} dc \r\n  join {{source('tpcds_ton','reason')}} o \r\n  left join order_fares_table orf \r\n  left join necessary_orders n\r\n)\r\n\r\n, dum as (\r\n  select *\r\n  from necessary_orders as a\r\n  left join order_fares_table as b \r\n  left join {{ref('stg_tpcds_ton_warehouse')}}\r\n  left join {{ref('int_tpch_ten_part')}} \r\n  left join {{ref('int_tpcds_ton_warehouse')}} \r\n  left join discount_cte \r\n  group by all\r\n)\r\n\r\nselect * from dum",
      },
      {
        relativePath: 'DBT_TEST/models/intermediate/python.py',
        name: 'python.py',
        pathType: 'file',
        depth: 3,
        index: 32,
        gitStatus: 'untracked',
        gitIgnored: false,
        content:
          'def multiply_with_cube(numbers):\n    """Multiply each number in the list by its cube and print the result."""\n    for number in numbers:\n        cube = number ** 3\n        result = number * cube\n        print(f"{number} * {number}^3 = {result}")\n\ndef main():\n    # Example list of numbers\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\n    # Call the function to multiply each number with its cube and print the result\n    multiply_with_cube(numbers)\n\nif __name__ == "__main__":\n    main()\n',
      },
      {
        relativePath: 'DBT_TEST/models/mart/call_center.sql',
        name: 'call_center.sql',
        pathType: 'file',
        depth: 3,
        index: 9,
        gitStatus: null,
        gitIgnored: false,
        content:
          "{{\r\n\tconfig(\r\n\t\tschema = 'mart',\r\n    \tmaterialized = 'table',\r\n        tags = ['finance_mis']\r\n\t)\r\n}}\r\n\r\nwith redeem_rewards as (\r\n  select *\r\n  from {{source('tpcds_ton','catalog_page')}} as a\r\n  left join {{source('tpcds_ton','call_center')}} as b o\r\n)\r\n  \r\n, porter_coins as (\r\n  select rr.updated_at:: date as redeem_coins_day\r\n    , c.geo_region_id\r\n    , sum(redeemed_coins) as coins_dbt\r\n  from {{source('tpcds_ton','web_returns')}}  rr\r\n  left join {{source('tpcds_ton','call_center')}} \r\n)\r\n  \r\n, call_center as (\r\n  select *\r\n  from {{ref('int_warehouse')}} as spot_cost left join  {{ref('int_tpcds_ton_item')}}\r\n)\r\n\r\nselect * from call_center",
      },
      {
        relativePath: 'DBT_TEST/models/mart/fare_reason.sql',
        name: 'fare_reason.sql',
        pathType: 'file',
        depth: 3,
        index: 16,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/final_model.sql',
        name: 'final_model.sql',
        pathType: 'file',
        depth: 3,
        index: 6,
        gitStatus: null,
        gitIgnored: false,
        content:
          "{{\r\n\tconfig(\r\n\t\tschema = 'mart',\r\n    \tmaterialized = 'table',\r\n        tags = ['finance_mis']\r\n\t)\r\n}}\r\n\r\nwith final_model as (\r\n    select *\r\n\tfrom {{ref('warehouse')}} \r\n\tleft join {{ref('fare_reason')}} \r\n\tleft join {{ref('reason')}} \r\n\tleft join {{ref('warehouse_item')}} \r\n\tleft join {{ref('store_reason')}} \r\n\tleft join {{ref('promotion')}} \r\n\tleft join {{ref('web_sales')}} \r\n\tleft join {{ref('warehouse_region')}} \r\n\tleft join {{ref('call_center')}}\r\n\tleft join {{ref('item')}} \r\n)\r\n\r\nselect * from final_model ",
      },
      {
        relativePath: 'DBT_TEST/models/mart/item.sql',
        name: 'item.sql',
        pathType: 'file',
        depth: 3,
        index: 14,
        gitStatus: null,
        gitIgnored: false,
        content:
          "{{\r\n\tconfig(\r\n\t\tschema = 'mart',\r\n    materialized = 'table',\r\n    tags = ['finance_mis']\r\n\t)\r\n}}\r\n\r\nwith overall_orders as (\r\n  select * \r\n  from {{source('tpcds_ton','reason')}} o \r\n  left join {{ref('stg_tpcds_ton_inventory')}} d \r\n  left join {{ref('stg_tpcds_ton_warehouse')}} as \r\n  left join {{ref('int_tpch_ten_part')}} as vc \r\n  left join {{ref('int_tpcds_ton_item')}} gzm \r\n  left join {{ref('int_tpcds_ton_warehouse')}} gvt \r\n  left join {{ref('int_store_sale_promotion')}} pp \r\n  left join {{ref('stg_tpcds_ton_catalog_returns')}} dtr \r\n)\r\n\r\nselect * from overall_orders \r\n ",
      },
      {
        relativePath: 'DBT_TEST/models/mart/promotion.sql',
        name: 'promotion.sql',
        pathType: 'file',
        depth: 3,
        index: 13,
        gitStatus: null,
        gitIgnored: false,
        content:
          "{{\r\n\tconfig(\r\n\t\tschema = 'mart',\r\n    \tmaterialized = 'table',\r\n        tags = ['finance_mis']\r\n\t)\r\n}}\r\n\r\n\r\nwith pfe as (\r\n    select *\r\n    from {{source('tpcds_ton','reason')}} o\r\n    left join {{ref('stg_tpcds_ton_inventory')}} d \r\n    left join {{ref('stg_tpch_one_customer')}} ba \r\n    left join {{ref('stg_tpcds_ton_warehouse')}} v \r\n    left join {{ref('int_tpch_ten_part')}} vc \r\n    left join {{ref('int_tpcds_ton_warehouse')}} gvt \r\n    left join {{ref('int_store_sale_promotion')}} pp \r\n    left join {{ref('stg_tpcds_ton_catalog_returns')}} dtr \r\n    )\r\n\r\nselect * from pfe ",
      },
      {
        relativePath: 'DBT_TEST/models/mart/pythonfile.py',
        name: 'pythonfile.py',
        pathType: 'file',
        depth: 3,
        index: 12,
        gitStatus: 'untracked',
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/reason.sql',
        name: 'reason.sql',
        pathType: 'file',
        depth: 3,
        index: 10,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/store_reason.sql',
        name: 'store_reason.sql',
        pathType: 'file',
        depth: 3,
        index: 8,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/warehouse.sql',
        name: 'warehouse.sql',
        pathType: 'file',
        depth: 3,
        index: 11,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/warehouse_item.sql',
        name: 'warehouse_item.sql',
        pathType: 'file',
        depth: 3,
        index: 17,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/warehouse_region.sql',
        name: 'warehouse_region.sql',
        pathType: 'file',
        depth: 3,
        index: 7,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/mart/web_sales.sql',
        name: 'web_sales.sql',
        pathType: 'file',
        depth: 3,
        index: 15,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath:
          'DBT_TEST/models/staging/stg_tpcds_ton_catalog_returns.sql',
        name: 'stg_tpcds_ton_catalog_returns.sql',
        pathType: 'file',
        depth: 3,
        index: 25,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging/stg_tpcds_ton_catalog_sales.sql',
        name: 'stg_tpcds_ton_catalog_sales.sql',
        pathType: 'file',
        depth: 3,
        index: 23,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging/stg_tpcds_ton_customer.sql',
        name: 'stg_tpcds_ton_customer.sql',
        pathType: 'file',
        depth: 3,
        index: 22,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging/stg_tpcds_ton_inventory.sql',
        name: 'stg_tpcds_ton_inventory.sql',
        pathType: 'file',
        depth: 3,
        index: 24,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging/stg_tpcds_ton_item.sql',
        name: 'stg_tpcds_ton_item.sql',
        pathType: 'file',
        depth: 3,
        index: 27,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging/stg_tpcds_ton_warehouse.sql',
        name: 'stg_tpcds_ton_warehouse.sql',
        pathType: 'file',
        depth: 3,
        index: 26,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath: 'DBT_TEST/models/staging/stg_tpch_one_customer.sql',
        name: 'stg_tpch_one_customer.sql',
        pathType: 'file',
        depth: 3,
        index: 21,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath:
          'DBT_TEST/target/compiled/lineage_test/from remote system.sql',
        name: 'from remote system.sql',
        pathType: 'directory',
        depth: 4,
        index: 52,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath:
          'DBT_TEST/target/compiled/lineage_test/from remote system.sql/sql',
        name: 'sql',
        pathType: 'directory',
        depth: 5,
        index: 53,
        gitStatus: null,
        gitIgnored: false,
      },
      {
        relativePath:
          'DBT_TEST/target/compiled/lineage_test/from remote system.sql/sql/inline_query',
        name: 'inline_query',
        pathType: 'file',
        depth: 6,
        index: 54,
        gitStatus: null,
        gitIgnored: false,
      },
    ],
  },
};

export default function () {
  return new Promise<FilesResponse>((resolve) => {
    setTimeout(() => {
      resolve(mockFilesData);
    }, 1500);
  }).then(({ status, data }) => ({
    status,
    data: structureFiles(data.files),
  }));
}
